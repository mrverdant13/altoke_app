name: monorepo

packages:
  - ./packages/app/
  - ./packages/common/
  - ./packages/element_in_memory_cache/
  - ./packages/tasks/
  - ./packages/tasks_repository/
  #*w 1v 2> w*#
  #{{#use_hive_database}}#
  - ./packages/tasks_storage/_conditional_dir___use_hive_database___tasks_hive_storage/
  #{{/use_hive_database}}#
  #{{#use_isar_database}}#
  - ./packages/tasks_storage/_conditional_dir___use_isar_database___tasks_isar_storage/
  #{{/use_isar_database}}#
  #{{#use_realm_database}}#
  - ./packages/tasks_storage/_conditional_dir___use_realm_database___tasks_realm_storage/
  #{{/use_realm_database}}#
  #{{#use_sembast_database}}#
  - ./packages/tasks_storage/_conditional_dir___use_sembast_database___tasks_sembast_storage/
  #{{/use_sembast_database}}#
  #{{#use_sqlite_database}}#
  - ./packages/tasks_storage/_conditional_dir___use_sqlite_database___tasks_sqlite_storage/
  #{{/use_sqlite_database}}#
  #*w 1v 2> w*#
  - ./packages/tasks_storage/tasks_storage/

command:
  #*w 1v 2> w*#
  #{{#use_realm_database}}#
  bootstrap:
    environment:
      sdk: ">=3.3.1 <4.0.0"
      flutter: ">=3.19.3 <4.0.0"
    hooks:
      post:
        run: >
          melos exec --depends-on realm -- "dart run realm install"
  #*w 1v 2> w*#
  #{{/use_realm_database}}#
  clean:
    hooks:
      pre:
        run: melos run clean

scripts:
  # Clean-up
  clean:
    description: Deep clean-up by removing all git-ignored elements.
    run: git clean -dfX .
    exec:
      concurrency: 1

  # Code Generation
  gen:
    description: Generate code for a package
    run: dart run build_runner build --delete-conflicting-outputs
    packageFilters:
      dependsOn:
        - build_runner
    exec:
      concurrency: 1
      failFast: true
      orderDependents: true
  #*w 1v 2> w*#
  #{{#use_realm_database}}#
  gen.realm:
    description: Generate code for a package with Realm
    run: dart run realm generate
    packageFilters:
      dependsOn:
        - realm
      ignore:
        - altoke_app
    exec:
      concurrency: 1
      failFast: true
      orderDependents: true
  #*w 1v 2> w*#
  #{{/use_realm_database}}#
  gen.all:
    description: Generate code for all packages
    #*w 1v 4> w*#
    #*replace-start*#
    run: >
      melos run gen --no-select
      &&
      melos run gen.realm --no-select
    #*with i4*#
    # run: >
    #   melos run gen --no-select
    #   #{{#use_realm_database}}#
    #   #*w 1v 6> w*#
    #   &&
    #   melos run gen.realm --no-select
    #   #{{/use_realm_database}}#
    #*replace-end*#
    #*w 2v 2> w*#

  # Formatting
  format:
    description: Format a package
    run: dart format .
    exec:
      concurrency: 1
  format.all:
    description: Format all packages
    run: melos run format --no-select

  # Analyzing
  analyze.dart:
    description: Analyze a Dart package
    run: dart analyze --fatal-infos --fatal-warnings
    packageFilters:
      flutter: false
    exec:
      concurrency: 1
      orderDependents: true
  analyze.flutter:
    description: Analyze a Flutter package
    run: flutter analyze --fatal-infos --fatal-warnings
    packageFilters:
      flutter: true
    exec:
      concurrency: 1
      orderDependents: true
  analyze.custom:
    description: Analyze a package with custom lint rules
    run: dart run custom_lint
    packageFilters:
      dependsOn:
        - custom_lint
    exec:
      concurrency: 1
      orderDependents: true
  analyze.all:
    description: Analyze all packages
    run: >
      melos run analyze.dart --no-select
      &&
      melos run analyze.flutter --no-select
      &&
      melos run analyze.custom --no-select

  # Testing & Coverage
  test.dart:
    description: Test a Dart package
    run: >
      dart test -x ci-only --coverage=coverage -r expanded --test-randomize-ordering-seed random --color
      &&
      format_coverage --lcov --in=coverage --out=coverage/lcov.info --report-on=lib -b MELOS_PACKAGE_PATH
    packageFilters:
      flutter: false
      dirExists:
        - test
      dependsOn:
        - test
    exec:
      concurrency: 1
      orderDependents: true
  test.flutter:
    description: Test a Flutter package
    run: flutter test -x ci-only --coverage -r expanded --test-randomize-ordering-seed random
    packageFilters:
      flutter: true
      dirExists:
        - test
      dependsOn:
        - flutter_test
    exec:
      concurrency: 1
      orderDependents: true
  test.all:
    description: Test all packages
    run: >
      melos run test.dart --no-select
      &&
      melos run test.flutter --no-select
  coverage.merge:
    description: Merge all coverage reports
    run: >
      coverde rm MELOS_ROOT_PATH/coverage/filtered.lcov.info
      &&
      melos exec -c 1 --file-exists=coverage/lcov.info -- "coverde filter --input ./coverage/lcov.info --output MELOS_ROOT_PATH/coverage/filtered.lcov.info --paths-parent MELOS_PACKAGE_PATH  --filters \.drift\.dart,\.freezed\.dart,\.g\.dart,\.gr\.dart"
  check.coverage:
    description: Check coverage
    run: >
      coverde check -i MELOS_ROOT_PATH/coverage/filtered.lcov.info 100
