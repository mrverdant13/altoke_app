name: altoke_bricks_monorepo

repository: https://github.com/mrverdant13/altoke_bricks

packages:
  - ./bricks/altoke_app/
  - ./bricks/altoke_app/brick/hooks/
  - ./bricks/altoke_app/e2e/
  - ./bricks/altoke_app/reference/
  - ./bricks/altoke_app/reference/packages/app/
  - ./bricks/altoke_dart_package/
  - ./bricks/altoke_dart_package/brick/hooks/
  - ./bricks/altoke_dart_package/e2e/
  - ./bricks/altoke_dart_package/reference/
  - ./bricks/altoke_common/
  - ./bricks/altoke_common/brick/hooks/
  - ./bricks/altoke_common/e2e/
  - ./bricks/altoke_common/reference/
  - ./bricks/altoke_entity/
  - ./bricks/altoke_entity/brick/hooks/
  - ./bricks/altoke_entity/e2e/
  - ./bricks/altoke_entity/reference/
  - ./bricks/altoke_reactive_caches/
  - ./bricks/altoke_reactive_caches/brick/hooks/
  - ./bricks/altoke_reactive_caches/e2e/
  - ./bricks/altoke_reactive_caches/reference/
  - ./bricks/altoke_storage/
  - ./bricks/altoke_storage/brick/hooks/
  - ./bricks/altoke_storage/e2e/
  - ./bricks/altoke_storage/reference/_cd___use_drift___altoke_entities_drift_storage/
  - ./bricks/altoke_storage/reference/_cd___use_hive___altoke_entities_hive_storage/
  - ./bricks/altoke_storage/reference/_cd___use_isar___altoke_entities_isar_storage/
  - ./bricks/altoke_storage/reference/_cd___use_realm___altoke_entities_realm_storage/
  - ./bricks/altoke_storage/reference/_cd___use_sembast___altoke_entities_sembast_storage/
  - ./bricks/altoke_storage/reference/altoke_entities_storage/
  - ./tools/brick_generator/
  - ./tools/data_persistence_approach/
  - ./tools/local_brick_installer/
  - ./tools/monorepo_elements/
  - ./tools/pubspec_deps_sorter/
  - ./tools/readmes_resolver/
  - ./tools/shell/
  - ./tools/value_equality_approach/

command:
  bootstrap:
    environment:
      sdk: ">=3.3.1 <4.0.0"
      flutter: ">=3.19.3 <4.0.0"
    dependencies:
      meta: ^1.11.0
    dev_dependencies:
      melos: ^6.1.0
      test: ^1.25.2
  clean:
    hooks:
      pre:
        run: melos run clean

scripts:
  # Clean-up
  clean:
    description: Deep clean up
    run: >
      git clean --exclude="!android" --exclude="!ios" --exclude="!linux" --exclude="!macos" --exclude="!web" --exclude="!windows" -dfX .
    exec:
      concurrency: 1

  # Code generation
  gen:
    description: Generate code for a package
    run: dart run build_runner build -d
    packageFilters:
      dependsOn:
        - build_runner
    exec:
      concurrency: 1
      failFast: true
      orderDependents: true
  gen.realm:
    description: Generate code for a package with Realm
    run: dart run realm generate
    packageFilters:
      dependsOn:
        - realm
      ignore:
        - altoke_app
    exec:
      concurrency: 1
      failFast: true
      orderDependents: true
  gen.all:
    description: Generate code for all packages
    steps:
      - gen
      - gen.realm
  gen.all.fast:
    description: Generate code for all packages (multi-threaded)
    steps:
      - melos exec --depends-on=build_runner --order-dependents -- "dart run build_runner build -d"
      - melos exec --depends-on=realm --order-dependents --ignore=altoke_app -- "dart run realm generate"

  # Spell checking
  spellcheck:
    description: Run spell checking for the entire project
    run: cspell lint --no-progress -c ./.cspell/cspell.yaml MELOS_ROOT_PATH/**

  # Formatting
  format:
    description: Format a package
    run: dart format .
    exec:
      concurrency: 1
    packageFilters:
      ignore:
        - "*_brick_scope"
  format.all:
    description: Format all packages
    steps:
      - format
  format.ci:
    description: Format all packages (CI)
    run: melos exec --ignore="*_brick_scope" --order-dependents --fail-fast -- "dart format --set-exit-if-changed ."

  # Analyzing
  analyze.dart:
    description: Analyze a Dart package
    run: dart analyze
    packageFilters:
      flutter: false
      ignore:
        - "*_brick_scope"
    exec:
      concurrency: 1
      orderDependents: true
  analyze.flutter:
    description: Analyze a Flutter package
    run: flutter analyze --no-pub
    packageFilters:
      ignore:
        - "*_brick_scope"
      flutter: true
    exec:
      concurrency: 1
      orderDependents: true
  analyze.custom:
    description: Analyze a package with custom lint rules
    run: dart run custom_lint
    packageFilters:
      ignore:
        - "*_brick_scope"
      dependsOn:
        - custom_lint
    exec:
      concurrency: 1
      orderDependents: true
  analyze.all:
    description: Analyze all packages
    steps:
      - analyze.dart
      - analyze.flutter
      - analyze.custom
  analyze.ci:
    description: Analyze all packages (CI)
    steps:
      - melos exec --ignore="*_brick_scope" --order-dependents --fail-fast --no-flutter -- "dart analyze --fatal-infos --fatal-warnings"
      - melos exec --ignore="*_brick_scope" --order-dependents --fail-fast --flutter -- "flutter analyze --fatal-infos --fatal-warnings --no-pub --no-congratulate --no-preamble"
      - melos exec --ignore="*_brick_scope" --order-dependents --fail-fast --depends-on=custom_lint -- "dart run custom_lint --fatal-infos --fatal-warnings"

  # Testing & Coverage
  test.dart:
    description: Test a Dart package
    run: >
      dart test -x ci-only --coverage=coverage -r expanded --test-randomize-ordering-seed random --color
      &&
      format_coverage --lcov --in=coverage --out=coverage/lcov.info --report-on=lib -b MELOS_PACKAGE_PATH
    packageFilters:
      flutter: false
      dirExists:
        - test
      dependsOn:
        - test
    exec:
      concurrency: 1
      orderDependents: true
  test.flutter:
    description: Test a Flutter package
    run: flutter test -x ci-only --coverage -r expanded --test-randomize-ordering-seed random
    packageFilters:
      flutter: true
      dirExists:
        - test
      dependsOn:
        - flutter_test
    exec:
      concurrency: 1
      orderDependents: true
  test.e2e:
    description: Run E2E tests
    run: dart test e2e --run-skipped -t e2e
    packageFilters:
      flutter: false
      fileExists:
        - e2e/brick_e2e_test.dart
    exec:
      concurrency: 1
      orderDependents: true
  test.e2e.all:
    description: Run E2E tests for all packages
    steps:
      - test.e2e
  test.all:
    description: Test all packages
    steps:
      - test.dart
      - test.flutter
  test.ci:
    description: Test all packages (CI)
    steps:
      - melos exec --order-dependents --fail-fast --no-flutter --dir-exists="test" --depends-on=test -- "dart test -x ci-only --coverage=coverage -r expanded --test-randomize-ordering-seed random && format_coverage --lcov --in=coverage --out=coverage/lcov.info --report-on=lib -b MELOS_PACKAGE_PATH"
      - melos exec --order-dependents --fail-fast --flutter --dir-exists="test" --depends-on=flutter_test -- "flutter test -x ci-only --coverage -r expanded --test-randomize-ordering-seed random"
  coverage.merge:
    description: Merge all packages coverage trace files ignoring data related to generated files
    steps:
      - coverde rm MELOS_ROOT_PATH/coverage/filtered.lcov.info
      - melos exec -c 1 --file-exists=coverage/lcov.info -- "coverde filter --input ./coverage/lcov.info --output MELOS_ROOT_PATH/coverage/filtered.lcov.info --paths-parent MELOS_PACKAGE_PATH  --filters \.drift\.dart,\.freezed\.dart,\.g\.dart,\.gr\.dart,\.mapper\.dart,\.realm\.dart"
  coverage.check:
    description: Check test coverage
    steps:
      - coverde check -i MELOS_ROOT_PATH/coverage/filtered.lcov.info 100

  # Documentation
  docs.root:
    description: Resolve root README file
    steps:
      - dart run MELOS_ROOT_PATH/tools/readmes_resolver/lib/reset_root_readme.dart
      - melos exec -c 1 --scope=*_brick_scope -- "dart run MELOS_ROOT_PATH/tools/readmes_resolver/lib/resolve_root_readme.dart"
  docs.brick:
    description: Resolve brick README files
    steps:
      - melos exec -c 1 --scope=*_brick_scope -- "dart run MELOS_ROOT_PATH/tools/readmes_resolver/lib/resolve_brick_readme.dart"
  docs.all:
    description: Resolve all README files
    steps:
      - docs.root
      - docs.brick

  # Brick management
  brick.gen:
    description: Generate brick
    run: >
      dart run MELOS_ROOT_PATH/tools/brick_generator/lib/main.dart MELOS_PACKAGE_PATH
    exec:
      concurrency: 1
    packageFilters:
      ignore:
        - brick_generator
      scope:
        - "*_brick_scope"
  brick.install:
    description: Add brick globally
    run: dart run MELOS_ROOT_PATH/tools/local_brick_installer/lib/install_local_brick.dart
    exec:
      concurrency: 1
      failFast: true
    packageFilters:
      scope:
        - "*_brick_scope"
  brick.all:
    description: Generate brick and add it globally
    steps:
      - brick.gen
      - brick.install
