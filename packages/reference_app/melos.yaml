name: monorepo

packages:
  - ./packages/app/

scripts:
  # Code Generation
  g:
    description: Generate code for a package
    run: dart run build_runner build --delete-conflicting-outputs
    packageFilters:
      dependsOn:
        - build_runner
    exec:
      concurrency: 1
      failFast: true
      orderDependents: true
  G:
    description: Generate code for all packages
    run: melos run g --no-select

  # Formatting
  f:
    description: Format a package
    run: dart format .
    exec:
      concurrency: 1
  F:
    description: Format all packages
    run: melos run f --no-select

  # Analyzing
  a.d:
    description: Analyze a Dart package
    run: dart analyze --fatal-infos --fatal-warnings
    packageFilters:
      flutter: false
    exec:
      concurrency: 1
      orderDependents: true
  a.f:
    description: Analyze a Flutter package
    run: flutter analyze --fatal-infos --fatal-warnings
    packageFilters:
      flutter: true
    exec:
      concurrency: 1
      orderDependents: true
  a.c:
    description: Analyze a package with custom lint rules
    run: dart run custom_lint
    packageFilters:
      dependsOn:
        - custom_lint
    exec:
      concurrency: 1
      orderDependents: true
  A:
    description: Analyze all packages
    run: >
      melos run a.d --no-select &&
      melos run a.f --no-select &&
      melos run a.c --no-select

  # Testing & Coverage
  t.d:
    description: Test a Dart package
    run: >
      dart test -x ci-only --coverage=coverage -r expanded --test-randomize-ordering-seed random --color &&
      dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --report-on=lib -b MELOS_PACKAGE_PATH
    packageFilters:
      flutter: false
      dirExists:
        - test
      dependsOn:
        - test
    exec:
      concurrency: 1
      orderDependents: true
  t.f:
    description: Test a Flutter package
    run: flutter test -x ci-only --coverage -r expanded --test-randomize-ordering-seed random
    packageFilters:
      flutter: true
      dirExists:
        - test
      dependsOn:
        - flutter_test
    exec:
      concurrency: 1
      orderDependents: true
  T:
    description: Test all packages
    run: >
      melos run t.d --no-select &&
      melos run t.f --no-select
  M:
    description: Merge all coverage reports
    run: >
      coverde rm MELOS_ROOT_PATH/coverage/filtered.lcov.info &&
      melos exec --file-exists=coverage/lcov.info -- "coverde filter --input ./coverage/lcov.info --output MELOS_ROOT_PATH/coverage/filtered.lcov.info --paths-parent MELOS_PACKAGE_PATH  --filters \.g\.dart,\.gr\.dart"

  C:
    description: Check coverage
    run: >
      coverde check -i MELOS_ROOT_PATH/coverage/filtered.lcov.info 100
